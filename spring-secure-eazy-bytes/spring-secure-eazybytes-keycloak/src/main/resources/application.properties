spring.application.name=${SPRING_APP_NAME:spring-secure-eazybytes-keycloak}
server.port=8081

#spring.security.user.name=${SECURITY_USERNAME:admin}
#spring.security.user.password=${SECURITY_PASSWORD:manage}

spring.datasource.url=jdbc:mysql://${DATABASE_HOST:localhost}:${DATABASE_PORT:3306}/${DATABASE_NAME:eazybank}
spring.datasource.username=${DATABASE_USERNAME:root}
spring.datasource.password=${DATABASE_PASSWORD:root}
spring.jpa.show-sql=${JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.format_sql=${HIBERNATE_FORMAT_SQL:true}

logging.level.org.springframework.security=${SPRING_SECURITY_LOG_LEVEL:TRACE}
logging.pattern.console=${LOGPATTERN_CONSOLE:%green(%d{HH:mm:ss:SSS}) %blue(%-5level) %red([%thread]) %yellow(%logger{15}) - %msg%n}

# minimum is 2m
server.servlet.session.timeout=${SESSION_TIMEOUT:20m}

# Public key of Auth Server, so that the resource server can verify that the Access Token is signed by Auth Server
# Google's OPENID Config Link - https://accounts.google.com/.well-known/openid-configuration
# Keycloak OpenID Config - http://localhost:8180/realms/eazybankdev/.well-known/openid-configuration
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${JWK_SET_URI:http://localhost:8180/realms/eazybankdev/protocol/openid-connect/certs}

#spring.security.oauth2.resourceserver.opaque.introspection-uri=${INTROSPECT_URI:http://localhost:8180/realms/eazybankdev/protocol/openid-connect/token/introspect}
#spring.security.oauth2.resourceserver.opaque.introspection-client-id=${INTROSPECT_ID:eazybankintrospect}
#spring.security.oauth2.resourceserver.opaque.introspection-client-secret=${INTROSPECT_SECRET:sF8bTuzlmNMaIY7OlrC3C5EHOd4XWx5h}